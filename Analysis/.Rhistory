scale_fill_viridis_d(end = 0.6)
ggplot(a_agg, aes(x = found, y = meanb, colour = condition, fill = condition)) +
geom_jitter(width = 0.2, height = 0, alpha = 0.5) +
stat_lineribbon(alpha = 0.25) +
geom_path(data = filter(a_agg, observer == 1, condition == "feature"),
aes(y = chance), linetype = 2, colour = "black") +
theme_minimal() +
scale_colour_viridis_d(option = "E") +
scale_fill_viridis_d(option = "E")
ggplot(a_agg, aes(x = found, y = meanb, colour = condition, fill = condition)) +
geom_jitter(width = 0.2, height = 0, alpha = 0.5) +
stat_lineribbon(alpha = 0.25) +
geom_path(data = filter(a_agg, observer == 1, condition == "feature"),
aes(y = chance), linetype = 2, colour = "black") +
theme_minimal() +
scale_colour_viridis_d(option = "A") +
scale_fill_viridis_d(option = "A")
ggplot(a_agg, aes(x = found, y = meanb, colour = condition, fill = condition)) +
geom_jitter(width = 0.2, height = 0, alpha = 0.5) +
stat_lineribbon(alpha = 0.25) +
geom_path(data = filter(a_agg, observer == 1, condition == "feature"),
aes(y = chance), linetype = 2, colour = "black") +
theme_minimal() +
scale_colour_viridis_d(option = "B") +
scale_fill_viridis_d(option = "B")
ggplot(a_agg, aes(x = found, y = meanb, colour = condition, fill = condition)) +
geom_jitter(width = 0.2, height = 0, alpha = 0.5) +
stat_lineribbon(alpha = 0.25) +
geom_path(data = filter(a_agg, observer == 1, condition == "feature"),
aes(y = chance), linetype = 2, colour = "black") +
theme_minimal() +
scale_colour_viridis_d(option = "C") +
scale_fill_viridis_d(option = "C")
ggplot(a_agg, aes(x = found, y = meanb, colour = condition, fill = condition)) +
geom_jitter(width = 0.2, height = 0, alpha = 0.5) +
stat_lineribbon(alpha = 0.25) +
geom_path(data = filter(a_agg, observer == 1, condition == "feature"),
aes(y = chance), linetype = 2, colour = "black") +
theme_minimal() +
scale_colour_viridis_d(option = "E") +
scale_fill_viridis_d(option = "E")
ggplot(a_agg, aes(x = found, y = meanb, colour = condition, fill = condition)) +
geom_jitter(width = 0.2, height = 0, alpha = 0.5) +
stat_lineribbon(alpha = 0.25) +
geom_path(data = filter(a_agg, observer == 1, condition == "feature"),
aes(y = chance), linetype = 2, colour = "black") +
theme_minimal() +
scale_colour_viridis_d(option = "E") +
scale_fill_viridis_d(option = "E", end = 0.75)
ggplot(a_agg, aes(x = found, y = meanb, colour = condition, fill = condition)) +
geom_jitter(width = 0.2, height = 0, alpha = 0.5) +
stat_lineribbon(alpha = 0.25) +
geom_path(data = filter(a_agg, observer == 1, condition == "feature"),
aes(y = chance), linetype = 2, colour = "black") +
theme_minimal() +
scale_colour_viridis_d(option = "E") +
scale_fill_viridis_d(option = "E")
ggplot(a_agg, aes(x = found, y = meanb, colour = condition, fill = condition)) +
geom_jitter(width = 0.2, height = 0, alpha = 0.5) +
stat_lineribbon(alpha = 0.25) +
geom_path(data = filter(a_agg, observer == 1, condition == "feature"),
aes(y = chance), linetype = 2, colour = "black") +
theme_minimal() +
ggthemes::scale_fill_economist()
ggplot(a_agg, aes(x = found, y = meanb, colour = condition, fill = condition)) +
geom_jitter(width = 0.2, height = 0, alpha = 0.5) +
stat_lineribbon(alpha = 0.25) +
geom_path(data = filter(a_agg, observer == 1, condition == "feature"),
aes(y = chance), linetype = 2, colour = "black") +
theme_minimal() +
ggthemes::scale_fill_fivethirtyeight()
ggplot(a_agg, aes(x = found, y = meanb, colour = condition, fill = condition)) +
geom_jitter(width = 0.2, height = 0, alpha = 0.5) +
stat_lineribbon(alpha = 0.25) +
geom_path(data = filter(a_agg, observer == 1, condition == "feature"),
aes(y = chance), linetype = 2, colour = "black") +
theme_minimal() +
ggthemes::scale_fill_fivethirtyeight() +
ggthemes::scale_colour_fivethirtyeight()
ggplot(a_agg, aes(x = found, y = meanb, colour = condition, fill = condition)) +
geom_jitter(width = 0.2, height = 0, alpha = 0.5) +
stat_lineribbon(alpha = 0.25) +
geom_path(data = filter(a_agg, observer == 1, condition == "feature"),
aes(y = chance), linetype = 2, colour = "black") +
theme_minimal() +
ggthemes::scale_fill_fivethirtyeight() +
ggthemes::scale_colour_fivethirtyeight() +
scale_x_continuous("target selection") +
scale_y_continuous("average weight from model")
ggplot(a_agg, aes(x = found, y = prop_best, colour = condition, fill = condition)) +
geom_jitter(width = 0.2, height = 0, alpha = 0.5) +
stat_lineribbon(alpha = 0.25) +
geom_path(data = filter(a_agg, observer == 1, condition == "feature"),
aes(y = chance), linetype = 2, colour = "black") +
theme_minimal() +
ggthemes::scale_fill_fivethirtyeight() +
ggthemes::scale_colour_fivethirtyeight() +
scale_x_continuous("target selection") +
scale_y_continuous("average weight from model")
ggplot(a_agg, aes(x = found, y = meanb, colour = condition, fill = condition)) +
geom_jitter(width = 0.2, height = 0, alpha = 0.25) +
stat_lineribbon(alpha = 0.25) +
geom_path(data = filter(a_agg, observer == 1, condition == "feature"),
aes(y = chance), linetype = 2, colour = "black") +
theme_minimal() +
ggthemes::scale_fill_fivethirtyeight() +
ggthemes::scale_colour_fivethirtyeight() +
scale_x_continuous("target selection") +
scale_y_continuous("average weight from model") -> plt_b
ggplot(a_agg, aes(x = found, y = prop_best, colour = condition, fill = condition)) +
geom_jitter(width = 0.2, height = 0, alpha = 0.25) +
stat_lineribbon(alpha = 0.25) +
geom_path(data = filter(a_agg, observer == 1, condition == "feature"),
aes(y = chance), linetype = 2, colour = "black") +
theme_minimal() +
ggthemes::scale_fill_fivethirtyeight() +
ggthemes::scale_colour_fivethirtyeight() +
scale_x_continuous("target selection") +
scale_y_continuous("average weight from model") -> plt_c
library(patchwork)
plt_b + plt_c
ggplot(a_agg, aes(x = found, y = prop_best, colour = condition, fill = condition)) +
geom_jitter(width = 0.2, height = 0, alpha = 0.25) +
stat_lineribbon(alpha = 0.25) +
geom_path(data = filter(a_agg, observer == 1, condition == "feature"),
aes(y = chance), linetype = 2, colour = "black") +
theme_minimal() +
ggthemes::scale_fill_fivethirtyeight() +
ggthemes::scale_colour_fivethirtyeight() +
scale_x_continuous("target selection") +
scale_y_continuous("proportion most likely was selected") -> plt_c
plt_b + plt_c
plt_b + plt_c + plot_layout(guides = "collect")
ggsave("qjep_preds.png", width = 5, height = 3)
ggsave("qjep_preds.png", width = 7, height = 4)
ggsave("qjep_preds.png", width = 9, height = 4)
source('~/GitHub/foraging_svg/analysis/trial_level_predictions.R', echo=TRUE)
saveRDS(a, "model_weights.rda")
summary(a)
filter(a, err> 0.5)
filter(a, trial == 1, observer == 1, condition == "feature")
ggplot(filter(d, observer == 1, trial == 1, condition == "feature"), aes(x, y, colour = targ_type)) +
geom_point() + geom_path()
ggplot(filter(d, observer == 1, trial == 1, condition == "feature"), aes(x, y, colour = targ_type)) +
geom_label(aes(label = found)) + geom_path()
filter(a, trial == 1, observer == 1, condition == "feature", err > 0.5)
library(tidyverse)
library(rstan)
library(tidybayes)
library(patchwork)
source("../functions/get_model_params.R")
source("comp_weights.R")
d <- read_csv("../reanalysis_data/clarke_2020_qjep.csv") %>%
mutate(condition = as_factor(condition),
condition = fct_recode(condition, feature = "1", conjunction = "2"))
fit <- get_model_params() %>% rename(observer = "obs")
comp_trials <- function(obs, cond) {
params <- filter(fit,  observer == obs, condition == cond )
a <- map_dfr(1:20, comp_weights, params = params, cond = cond, obs = obs)
return(a)
}
a_feat <- map_dfr(unique(d$observer), comp_trials, cond = "feature")
a_conj <- map_dfr(unique(d$observer), comp_trials, cond = "conjunction")
a <- bind_rows(a_feat, a_conj)
rm(a_feat, a_conj)
a %>% group_by(condition, observer, found) %>%
summarise(meanb = mean(b),
prop_best = mean(bMax)) %>%
filter(found > 1) %>%
mutate(chance = 1/(41-found))-> a_agg
ggplot(a_agg, aes(x = found, y = meanb, colour = condition, fill = condition)) +
geom_jitter(width = 0.2, height = 0, alpha = 0.25) +
stat_lineribbon(alpha = 0.25) +
geom_path(data = filter(a_agg, observer == 1, condition == "feature"),
aes(y = chance), linetype = 2, colour = "black") +
theme_minimal() +
ggthemes::scale_fill_fivethirtyeight() +
ggthemes::scale_colour_fivethirtyeight() +
scale_x_continuous("target selection") +
scale_y_continuous("average weight from model") -> plt_b
ggplot(a_agg, aes(x = found, y = prop_best, colour = condition, fill = condition)) +
geom_jitter(width = 0.2, height = 0, alpha = 0.25) +
stat_lineribbon(alpha = 0.25) +
geom_path(data = filter(a_agg, observer == 1, condition == "feature"),
aes(y = chance), linetype = 2, colour = "black") +
theme_minimal() +
ggthemes::scale_fill_fivethirtyeight() +
ggthemes::scale_colour_fivethirtyeight() +
scale_x_continuous("target selection") +
scale_y_continuous("proportion most likely was selected") -> plt_c
plt_b + plt_c + plot_layout(guides = "collect")
ggsave("qjep_preds.png", width = 9, height = 4)
saveRDS(a, "model_weights.rda")
a
ggplot(filter(d, observer == 1, trial == 1, condition == "feature"), aes(x, y, colour = targ_type)) +
geom_label(aes(label = found)) + geom_path()
mistakes <- filter(a, observer == 1, trial == 1, condition == "feature")
mistakes
mistakes <- filter(a, observer == 1, trial == 1, condition == "feature") %>%
select(x, y, model_pref)
mistakes
mistakes <- filter(a, observer == 1, trial == 1, condition == "feature", err> 0.5) %>%
select(x, y, err, model_pref)
mistakes
mistakes <- filter(a, observer == 1, trial == 1, condition == "feature", err> 0.5) %>%
select(x, y, found, err, model_pref)
mistakes
library(ggrepel)
ggplot(filter(d, observer == 1, trial == 1, condition == "feature"), aes(x, y, colour = targ_type)) +
geom_label(aes(label = found)) + geom_path() +
geom_label_repel(data = mistakes)
ggplot(filter(d, observer == 1, trial == 1, condition == "feature"), aes(x, y, colour = targ_type)) +
geom_label(aes(label = found)) + geom_path() +
geom_label_repel(data = mistakes, aes(x, y, label = model_pref))
ggplot(filter(d, observer == 1, trial == 1, condition == "feature"), aes(x, y, colour = targ_type)) +
geom_label(aes(label = found)) + geom_path() +
geom_label_repel(data = mistakes, aes(x, y, label = model_pref), colour = "red")
mistakes <- filter(a, observer == 1, trial == 1, condition == "feature", err> 0.25) %>%
select(x, y, found, err, model_pref)
ggplot(filter(d, observer == 1, trial == 1, condition == "feature"), aes(x, y, colour = targ_type)) +
geom_label(aes(label = found)) + geom_path() +
geom_label_repel(data = mistakes, aes(x, y, label = model_pref), colour = "red")
geom_label_repel(data = mistakes, aes(x, y, label = paste(model_pref, err), colour = "red")
ggplot(filter(d, observer == 1, trial == 1, condition == "feature"), aes(x, y, colour = targ_type)) +
geom_label(aes(label = found)) + geom_path() +
geom_label_repel(data = mistakes, aes(x, y, label = paste(model_pref, err)), colour = "red")
ggplot(filter(d, observer == 1, trial == 1, condition == "feature"), aes(x, y, colour = targ_type)) +
geom_label(aes(label = found)) + geom_path() +
geom_label_repel(data = mistakes, aes(x, y, label = paste(model_pref, err)), colour = "red")
ggplot(filter(d, observer == 1, trial == 1, condition == "feature"), aes(x, y, colour = targ_type)) +
geom_label(aes(label = found)) + geom_path() +
geom_label_repel(data = mistakes, aes(x, y, label = paste(model_pref, round(err,2)))), colour = "red")
ggplot(filter(d, observer == 1, trial == 1, condition == "feature"), aes(x, y, colour = targ_type)) +
geom_label(aes(label = found)) + geom_path() +
geom_label_repel(data = mistakes, aes(x, y, label = paste(model_pref, round(err,2))), colour = "red")
mistakes <- filter(a, observer == 1, trial == 1, condition == "feature", err> 0.1) %>%
select(x, y, found, err, model_pref)
ggplot(filter(d, observer == 1, trial == 1, condition == "feature"), aes(x, y, colour = targ_type)) +
geom_label(aes(label = found)) + geom_path() +
geom_label_repel(data = mistakes, aes(x, y, label = paste(model_pref, round(err,2))), colour = "red")
mistakes <- filter(a, observer == 1, trial == 1, condition == "feature", err> 0.2) %>%
select(x, y, found, err, model_pref)
mistakes <- filter(a, observer == 1, trial == 1, condition == "feature", err> 0.25) %>%
select(x, y, found, err, model_pref)
mistakes <- filter(a, observer == 1, trial == 1, condition == "feature", err> 0.5) %>%
select(x, y, found, err, model_pref)
ggplot(filter(d, observer == 1, trial == 1, condition == "feature"), aes(x, y, colour = targ_type)) +
geom_label(aes(label = found)) + geom_path() +
geom_label_repel(data = mistakes, aes(x, y, label = paste(model_pref, round(err,2))), colour = "red")
ggplot(filter(d, observer == 1, trial == 1, condition == "feature"), aes(x, y, colour = targ_type)) +
geom_label(aes(label = found)) + geom_path() +
geom_label_repel(data = mistakes, aes(x, y, label = paste(model_pref, "p = ", round(err,2))), colour = "red")
ggplot(filter(d, observer == 1, trial == 1, condition == "feature"), aes(x, y, colour = targ_type)) +
geom_label(aes(label = found)) + geom_path() +
geom_label_repel(data = mistakes, aes(x, y, label = paste(model_pref, ", p=", round(err,2))), colour = "red")
a
mistakes <- filter(a, observer == 1, trial == 1, condition == "conjunction", err> 0.5) %>%
select(x, y, found, err, model_pref)
filter(a, condition == "conjunction", err > 0.5)
mistakes <- filter(a, observer == 1, trial == 2, condition == "conjunction", err> 0.5) %>%
select(x, y, found, err, model_pref)
ggplot(filter(d, observer == 1, trial == 2, condition == "conjunction"), aes(x, y, colour = targ_type)) +
geom_label(aes(label = found)) + geom_path() +
geom_label_repel(data = mistakes, aes(x, y, label = paste(model_pref, ", p=", round(err,2))), colour = "red")
mistakes <- filter(a, observer == 1, trial == 3, condition == "conjunction", err> 0.5) %>%
select(x, y, found, err, model_pref)
ggplot(filter(d, observer == 1, trial == 3, condition == "conjunction"), aes(x, y, colour = targ_type)) +
geom_label(aes(label = found)) + geom_path() +
geom_label_repel(data = mistakes, aes(x, y, label = paste(model_pref, ", p=", round(err,2))), colour = "red")
mistakes <- filter(a, observer == 1, trial == 3, condition == "conjunction", err> 0.25) %>%
select(x, y, found, err, model_pref)
ggplot(filter(d, observer == 1, trial == 3, condition == "conjunction"), aes(x, y, colour = targ_type)) +
geom_label(aes(label = found)) + geom_path() +
geom_label_repel(data = mistakes, aes(x, y, label = paste(model_pref, ", p=", round(err,2))), colour = "red")
mistakes <- filter(a, observer == 1, trial == 3, condition == "conjunction", err> 0.5) %>%
select(x, y, found, err, model_pref)
ggplot(filter(d, observer == 1, trial == 3, condition == "conjunction"), aes(x, y, colour = targ_type)) +
geom_label(aes(label = found)) + geom_path() +
geom_label_repel(data = mistakes, aes(x, y, label = paste(model_pref, ", p=", round(err,2))), colour = "red")
a
a %>% mutate(b_bin = cut(b))
source('~/GitHub/foraging_svg/analysis/trial_level_predictions.R', echo=TRUE)
a %>% mutate(b_bin = cut(b, breaks = 10))
a %>% mutate(b_bin = cut(b, breaks = 10)) %>%
group_by(b_bin) %>%
summarise(acc = mean(bMax))
filter(a, b >0.9)
summary(filter(a, b >0.9))
summary(filter(a, b >0.5))
summary(filter(a, b >0.4))
a %>% mutate(b_bin = cut(b, breaks = 100)) %>%
group_by(b_bin) %>%
summarise(acc = mean(bMax))
a %>% mutate(b_bin = cut(b, breaks = 100)) %>%
group_by(b_bin) %>%
summarise(acc = mean(bMax)) %>%
ggplot(aes(b_bin, acc)) + geom_path()
a %>% mutate(b_bin = cut(b, breaks = 100)) %>%
group_by(b_bin) %>%
summarise(acc = mean(bMax)) %>%
ggplot(aes(b_bin, acc)) + geom_col()
?cut
a %>% mutate(b_bin = cut(b, breaks = 100, labels = FALSE)) %>%
group_by(b_bin) %>%
summarise(acc = mean(bMax)) %>%
ggplot(aes(b_bin, acc)) + geom_col()
a %>% mutate(b_bin = cut(b, breaks = 100, labels = FALSE)) %>%
group_by(b_bin) %>%
summarise(acc = mean(bMax)) %>%
mutate(b_bin = b_bin/100) %>%
ggplot(aes(b_bin, acc)) + geom_col()
a %>% mutate(b_bin = cut(b, breaks = 100, labels = FALSE)) %>%
group_by(b_bin) %>%
summarise(acc = mean(bMax)) %>%
mutate(b_bin = as.numeric(b_bin)/100) %>%
ggplot(aes(b_bin, acc)) + geom_path()
a %>% mutate(b_bin = cut(b, breaks = 100, labels = FALSE)) %>%
group_by(b_bin) %>%
summarise(acc = mean(bMax)) %>%
mutate(b_bin = as.numeric(b_bin)/100) %>%
ggplot(aes(b_bin, acc)) + geom_path() +
geom_abline(linetype = 2)
a
hist(a$b)
a %>% mutate(b_bin = cut(b, breaks = 100, labels = FALSE)) %>%
group_by(b_bin) %>%
summarise(acc = mean(bMax)) %>%
mutate(b_bin = as.numeric(b_bin)/100) %>%
ggplot(aes(b_bin, acc)) + geom_path() +
geom_abline(linetype = 2)
mistakes
a %>% mutate(b_bin = cut(b, breaks = 100, labels = FALSE)) %>%
group_by(b_bin) %>%
summarise(acc = mean(bMax))
cumsum(a %>% mutate(b_bin = cut(b, breaks = 100, labels = FALSE)) %>%
group_by(b_bin) %>%
summarise(acc = mean(bMax)))
cumsum(a %>% mutate(b_bin = cut(b, breaks = 100, labels = FALSE)) %>%
group_by(b_bin) %>%
summarise(acc = mean(bMax)), acc)
filter(a %>% mutate(b_bin = cut(b, breaks = 100, labels = FALSE)) %>%
group_by(b_bin) %>%
summarise(acc = mean(bMax)), acc>0)
a
a %>% filter(b < 0.12) %>% group_by(observer, condition, trial) %>%
summarise(mistakes = n())
a %>% filter(b < 0.12) %>% group_by(observer, condition) %>%
summarise(mistakes = n())
a %>% filter(b < 0.12) %>% group_by(observer) %>%
summarise(mistakes = n())
a %>% filter(b < 0.12) %>% group_by(observer) %>%
summarise(mistakes = n()) + arrange(mistakes)
a %>% filter(b < 0.12) %>% group_by(observer) %>%
summarise(mistakes = n()) %>% arrange(mistakes)
a %>% filter(b < 0.12) %>% group_by(observer) %>%
summarise(mistakes = n()) %>% arrange(mistakes) %>%
ggplot(aes(observer, mistakes)) + geom_col()
a %>% filter(b < 0.12) %>% group_by(observer) %>%
summarise(mistakes = n()) %>% arrange(desc(mistakes)) %>%
ggplot(aes(observer, mistakes)) + geom_col()
a %>% filter(b < 0.12) %>% group_by(observer) %>%
summarise(mistakes = n()) %>% arrange(desc(mistakes))
filter(a, observer == 34)
a %>% group_by(observer, trial) %>%
summarise(acc = mean(bMax))
a %>% group_by(observer, trial) %>%
summarise(acc = mean(bMax, na.rm = T))
a %>% group_by(observer, trial) %>%
summarise(acc = mean(bMax, na.rm = T)) %>%
arrange(desc(acc))
a %>% group_by(observer, trial) %>%
summarise(acc = mean(bMax, na.rm = T)) %>%
arrange((acc))
a %>% group_by(observer, condition, trial) %>%
summarise(acc = mean(bMax, na.rm = T)) %>%
arrange((acc))
ggplot(filter(d, observer == 35, trial == 6, condition == "feature"), aes(x, y, colour = targ_type)) +
geom_label(aes(label = found)) + geom_path() +
geom_label_repel(data = mistakes, aes(x, y, label = paste(model_pref, ", p=", round(err,2))), colour = "red")
mistakes <- filter(a, observer == 1, trial == 3, condition == "conjunction", err> 0.25) %>%
select(x, y, found, err, model_pref)
ggplot(filter(d, observer == 35, trial == 6, condition == "feature"), aes(x, y, colour = targ_type)) +
geom_label(aes(label = found)) + geom_path() +
geom_label_repel(data = mistakes, aes(x, y, label = paste(model_pref, ", p=", round(err,2))), colour = "red")
params
library(tidyverse)
library(rstan)
library(tidybayes)
library(patchwork)
library(ggrepel)
source("../functions/get_model_params.R")
source("comp_weights.R")
d <- read_csv("../reanalysis_data/clarke_2020_qjep.csv") %>%
mutate(condition = as_factor(condition),
condition = fct_recode(condition, feature = "1", conjunction = "2"))
fit <- get_model_params() %>% rename(observer = "obs")
comp_trials <- function(obs, cond) {
params <- filter(fit,  observer == obs, condition == cond )
a <- map_dfr(1:20, comp_weights, params = params, cond = cond, obs = obs)
return(a)
}
a <- readRDS("model_weights.rda")
a
a %>% group_by(condition, observer, found) %>%
summarise(meanb = mean(b),
prop_best = mean(bMax)) %>%
filter(found > 1) %>%
mutate(chance = 1/(41-found))-> a_agg
ggplot(a_agg, aes(x = found, y = meanb, colour = condition, fill = condition)) +
geom_jitter(width = 0.2, height = 0, alpha = 0.25) +
stat_lineribbon(alpha = 0.25) +
geom_path(data = filter(a_agg, observer == 1, condition == "feature"),
aes(y = chance), linetype = 2, colour = "black") +
theme_minimal() +
ggthemes::scale_fill_fivethirtyeight() +
ggthemes::scale_colour_fivethirtyeight() +
scale_x_continuous("target selection") +
scale_y_continuous("average weight from model") -> plt_b
ggplot(a_agg, aes(x = found, y = prop_best, colour = condition, fill = condition)) +
geom_jitter(width = 0.2, height = 0, alpha = 0.25) +
stat_lineribbon(alpha = 0.25) +
geom_path(data = filter(a_agg, observer == 1, condition == "feature"),
aes(y = chance), linetype = 2, colour = "black") +
theme_minimal() +
ggthemes::scale_fill_fivethirtyeight() +
ggthemes::scale_colour_fivethirtyeight() +
scale_x_continuous("target selection") +
scale_y_continuous("proportion most likely was selected") -> plt_c
plt_b + plt_c + plot_layout(guides = "collect")
a %>% mutate(b_bin = cut(b, breaks = 100, labels = FALSE)) %>%
group_by(b_bin) %>%
summarise(acc = mean(bMax)) %>%
mutate(b_bin = as.numeric(b_bin)/100) %>%
ggplot(aes(b_bin, acc)) + geom_path() +
geom_abline(linetype = 2)
mistakes <- filter(a, observer == 1, trial == 3, condition == "conjunction", err> 0.25) %>%
select(x, y, found, err, model_pref)
ggplot(filter(d, observer == 1, trial == 3, condition == "conjunction"), aes(x, y, colour = targ_type)) +
geom_label(aes(label = found)) + geom_path() +
geom_label_repel(data = mistakes, aes(x, y, label = paste(model_pref, ", p=", round(err,2))), colour = "red")
mistakes <- filter(a, observer == 1, trial == 3, condition == "conjunction", err> 0.5) %>%
select(x, y, found, err, model_pref)
ggplot(filter(d, observer == 1, trial == 3, condition == "conjunction"), aes(x, y, colour = targ_type)) +
geom_label(aes(label = found)) + geom_path() +
geom_label_repel(data = mistakes, aes(x, y, label = paste(model_pref, ", p=", round(err,2))), colour = "red")
install.packages(pkgs=unname(installed.packages()[, "Package"]), type = "win.binary", dependencies = TRUE)
install.packages(pkgs = unname(installed.packages()[, "Package"]), type = "win.binary", dependencies = TRUE)
install.packages(pkgs = unname(installed.packages()[, "Package"]), type = "win.binary", dependencies = TRUE)
install.packages(pkgs = unname(installed.packages()[, "Package"]), type = "win.binary", dependencies = TRUE)
install.packages(pkgs = unname(installed.packages()[, "Package"]), type = "win.binary", dependencies = TRUE)
install.packages(pkgs = unname(installed.packages()[, "Package"]), type = "win.binary", dependencies = TRUE)
install.packages(pkgs = unname(installed.packages()[, "Package"]), type = "win.binary", dependencies = TRUE)
install.packages(pkgs=unname(installed.packages()[, "Package"]), type = "win.binary", dependencies = TRUE)
install.packages(pkgs = unname(installed.packages()[, "Package"]), type = "win.binary", dependencies = TRUE)
install.packages(pkgs = unname(installed.packages()[, "Package"]), type = "win.binary", dependencies = TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
warnings()
library(tidyverse)
library(rstan)
library(tidybayes)
library(patchwork)
library(ggrepel)
source("../functions/get_model_params.R")
source("comp_weights.R")
d <- read_csv("../reanalysis_data/clarke_2020_qjep.csv") %>%
mutate(condition = as_factor(condition),
condition = fct_recode(condition, feature = "1", conjunction = "2"))
fit <- get_model_params() %>% rename(observer = "obs")
comp_trials <- function(obs, cond) {
params <- filter(fit,  observer == obs, condition == cond )
a <- map_dfr(1:20, comp_weights, params = params, cond = cond, obs = obs)
return(a)
}
# a_feat <- map_dfr(unique(d$observer), comp_trials, cond = "feature")
# a_conj <- map_dfr(unique(d$observer), comp_trials, cond = "conjunction")
# a <- bind_rows(a_feat, a_conj)
# rm(a_feat, a_conj)
a <- readRDS("model_weights.rda")
a %>% group_by(condition, observer, found) %>%
summarise(meanb = mean(b),
prop_best = mean(bMax)) %>%
filter(found > 1) %>%
mutate(chance = 1/(41-found))-> a_agg
ggplot(a_agg, aes(x = found, y = meanb, colour = condition, fill = condition)) +
geom_jitter(width = 0.2, height = 0, alpha = 0.25) +
stat_lineribbon(alpha = 0.25) +
geom_path(data = filter(a_agg, observer == 1, condition == "feature"),
aes(y = chance), linetype = 2, colour = "black") +
theme_minimal() +
ggthemes::scale_fill_fivethirtyeight() +
ggthemes::scale_colour_fivethirtyeight() +
scale_x_continuous("target selection") +
scale_y_continuous("average weight from model") -> plt_b
ggplot(a_agg, aes(x = found, y = prop_best, colour = condition, fill = condition)) +
geom_jitter(width = 0.2, height = 0, alpha = 0.25) +
stat_lineribbon(alpha = 0.25) +
geom_path(data = filter(a_agg, observer == 1, condition == "feature"),
aes(y = chance), linetype = 2, colour = "black") +
theme_minimal() +
ggthemes::scale_fill_fivethirtyeight() +
ggthemes::scale_colour_fivethirtyeight() +
scale_x_continuous("target selection") +
scale_y_continuous("proportion most likely was selected") -> plt_c
plt_b + plt_c + plot_layout(guides = "collect")
a %>% mutate(b_bin = cut(b, breaks = 100, labels = FALSE)) %>%
group_by(b_bin) %>%
summarise(acc = mean(bMax)) %>%
mutate(b_bin = as.numeric(b_bin)/100) %>%
ggplot(aes(b_bin, acc)) + geom_path() +
geom_abline(linetype = 2)
a
